# =====================================================
# DOCKER COMPOSE - PostgreSQL Setup for Development
# Setup rapido del database PostgreSQL per sviluppo
# =====================================================

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: isru-metrics-postgres
    restart: unless-stopped
    
    environment:
      POSTGRES_DB: isru_metrics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_dev_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    
    ports:
      - "5432:5432"
    
    volumes:
      # Persist data
      - postgres_data:/var/lib/postgresql/data
      
      # Initialize database with schema
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/migration.sql:/docker-entrypoint-initdb.d/02-migration.sql
      
      # Custom PostgreSQL configuration
      - ./database/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d isru_metrics"]
      interval: 10s
      timeout: 5s
      retries: 5
    
    networks:
      - isru-network

  # pgAdmin (optional - for database management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: isru-metrics-pgadmin
    restart: unless-stopped
    
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@isru-metrics.local
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    
    ports:
      - "8080:80"
    
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    
    depends_on:
      postgres:
        condition: service_healthy
    
    networks:
      - isru-network

  # Redis (optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: isru-metrics-redis
    restart: unless-stopped
    
    ports:
      - "6379:6379"
    
    volumes:
      - redis_data:/data
    
    command: redis-server --appendonly yes
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    
    networks:
      - isru-network

volumes:
  postgres_data:
    driver: local
    name: isru-metrics-postgres-data
  
  pgadmin_data:
    driver: local
    name: isru-metrics-pgadmin-data
  
  redis_data:
    driver: local
    name: isru-metrics-redis-data

networks:
  isru-network:
    driver: bridge
    name: isru-metrics-network
